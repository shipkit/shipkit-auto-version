#
# CI build that also make relases from the main dev branch.
#
# - skipping CI: add [skip ci] to the commit message
# - skipping release: add [skip release] to the commit message
#
name: CI

on:
  push:
    branches: [master]
    tags-ignore: [v*]
  pull_request:
    branches: [master]

jobs:
  gradle_wrapper_validation:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2.3.4   # docs: https://github.com/actions/checkout
      with:
        fetch-depth: '0'  # https://github.com/shipkit/shipkit-auto-version#fetch-depth-on-ci
    - name: Gradle wrapper validation
      uses: gradle/wrapper-validation-action@v1.0.5

  windows_build:
    if: "! contains(toJSON(github.event.commits.*.message), '[skip ci]')"
    runs-on: windows-latest
    needs: gradle_wrapper_validation
    steps:
    - uses: actions/checkout@v2.3.4   # docs: https://github.com/actions/checkout
      with:
        fetch-depth: '0'  # https://github.com/shipkit/shipkit-auto-version#fetch-depth-on-ci
    - name: Run build
      run: .\gradlew.bat build --continue

  build:

    runs-on: ubuntu-latest

    # We run Windows build first because we will be publishing artifacts from the Ubuntu build (simplifies workflow)
    needs: [windows_build, gradle_wrapper_validation]

    steps:
    - uses: actions/checkout@v2.3.4   # docs: https://github.com/actions/checkout
      with:
        fetch-depth: '0'  # https://github.com/shipkit/shipkit-auto-version#fetch-depth-on-ci
    - name: Run build
      run: ./gradlew build --continue
    - name: Push tag and deploy to plugins.gradle.org
      if: github.event_name == 'push'
          && github.ref == 'refs/heads/master'
          && github.repository == 'shipkit/shipkit-auto-version'
          && !contains(toJSON(github.event.commits.*.message), '[skip release]')
      run: ./gradlew publishPlugins githubRelease
      env:
          # Gradle env variables docs: https://docs.gradle.org/current/userguide/build_environment.html#sec:gradle_environment_variables
          GRADLE_PUBLISH_KEY: ${{ secrets.GRADLE_PUBLISH_KEY }}
          GRADLE_PUBLISH_SECRET: ${{ secrets.GRADLE_PUBLISH_SECRET }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
